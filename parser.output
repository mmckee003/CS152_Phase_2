Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program function

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    4 declarations: %empty
    5             | declaration SEMICOLON declarations

    6 statements: %empty
    7           | statement SEMICOLON statements

    8 declaration: identifiers COLON INTEGER
    9            | identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   10            | identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   11            | error

   12 identifiers: ident
   13            | identifiers COMMA ident
   14            | identifiers error ident

   15 statement: var ASSIGN expression
   16          | IF bool_exp THEN statements ENDIF
   17          | IF bool_exp THEN statements ELSE statements ENDIF
   18          | WHILE bool_exp BEGIN_LOOP statements END_LOOP
   19          | DO BEGIN_LOOP statements END_LOOP WHILE bool_exp
   20          | FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGIN_LOOP statements END_LOOP
   21          | READ vars
   22          | WRITE vars
   23          | CONTINUE
   24          | RETURN expression
   25          | var error expression

   26 vars: var
   27     | vars COMMA var
   28     | vars error var

   29 bool_exp: relation_and_expr
   30         | bool_exp OR relation_and_expr

   31 relation_and_expr: relation_expr
   32                  | relation_and_expr AND relation_expr

   33 relation_expr: expression comp expression
   34              | NOT expression comp expression
   35              | TRUE
   36              | NOT TRUE
   37              | FALSE
   38              | NOT FALSE
   39              | L_PAREN bool_exp R_PAREN
   40              | NOT L_PAREN bool_exp R_PAREN

   41 comp: EQ
   42     | NEQ
   43     | LT
   44     | GT
   45     | LTE
   46     | GTE

   47 expression: multiplicative_expr
   48           | expression ADD multiplicative_expr
   49           | expression SUB multiplicative_expr

   50 multiplicative_expr: term
   51                    | multiplicative_expr MULT term
   52                    | multiplicative_expr DIV term
   53                    | multiplicative_expr MOD term

   54 term: var
   55     | SUB var
   56     | number
   57     | SUB number
   58     | L_PAREN expression R_PAREN
   59     | SUB L_PAREN expression R_PAREN
   60     | ident L_PAREN expressions R_PAREN

   61 expressions: %empty
   62            | expression
   63            | expressions COMMA expression
   64            | expressions error expression

   65 var: ident
   66    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   67    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   68 ident: IDENT

   69 number: NUMBER


Terminals, with rules where they appear

    $end (0) 0
    error (256) 11 14 25 28 64
    FUNCTION (258) 3
    BEGIN_PARAMS (259) 3
    END_PARAMS (260) 3
    BEGIN_LOCALS (261) 3
    END_LOCALS (262) 3
    BEGIN_BODY (263) 3
    END_BODY (264) 3
    INTEGER (265) 8 9 10
    ARRAY (266) 9 10
    OF (267) 9 10
    IF (268) 16 17
    THEN (269) 16 17
    ENDIF (270) 16 17
    ELSE (271) 17
    WHILE (272) 18 19
    DO (273) 19
    FOR (274) 20
    BEGIN_LOOP (275) 18 19 20
    END_LOOP (276) 18 19 20
    CONTINUE (277) 23
    READ (278) 21
    WRITE (279) 22
    AND (280) 32
    OR (281) 30
    NOT (282) 34 36 38 40
    TRUE (283) 35 36
    FALSE (284) 37 38
    RETURN (285) 24
    IDENT (286) 68
    NUMBER (287) 69
    SEMICOLON (288) 3 5 7 20
    COLON (289) 8 9 10
    COMMA (290) 13 27 63
    ASSIGN (291) 15 20
    LT (292) 43
    LTE (293) 45
    GT (294) 44
    GTE (295) 46
    EQ (296) 41
    NEQ (297) 42
    ADD (298) 48
    SUB (299) 49 55 57 59
    MULT (300) 51
    DIV (301) 52
    MOD (302) 53
    L_SQUARE_BRACKET (303) 9 10 66 67
    R_SQUARE_BRACKET (304) 9 10 66 67
    L_PAREN (305) 39 40 58 59 60
    R_PAREN (306) 39 40 58 59 60


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    program (53)
        on left: 1 2
        on right: 0 2
    function (54)
        on left: 3
        on right: 2
    declarations (55)
        on left: 4 5
        on right: 3 5
    statements (56)
        on left: 6 7
        on right: 3 7 16 17 18 19 20
    declaration (57)
        on left: 8 9 10 11
        on right: 5
    identifiers (58)
        on left: 12 13 14
        on right: 8 9 10 13 14
    statement (59)
        on left: 15 16 17 18 19 20 21 22 23 24 25
        on right: 7
    vars (60)
        on left: 26 27 28
        on right: 21 22 27 28
    bool_exp (61)
        on left: 29 30
        on right: 16 17 18 19 20 30 39 40
    relation_and_expr (62)
        on left: 31 32
        on right: 29 30 32
    relation_expr (63)
        on left: 33 34 35 36 37 38 39 40
        on right: 31 32
    comp (64)
        on left: 41 42 43 44 45 46
        on right: 33 34
    expression (65)
        on left: 47 48 49
        on right: 15 20 24 25 33 34 48 49 58 59 62 63 64 66 67
    multiplicative_expr (66)
        on left: 50 51 52 53
        on right: 47 48 49 51 52 53
    term (67)
        on left: 54 55 56 57 58 59 60
        on right: 50 51 52 53
    expressions (68)
        on left: 61 62 63 64
        on right: 60 63 64
    var (69)
        on left: 65 66 67
        on right: 15 20 25 26 27 28 54 55
    ident (70)
        on left: 68
        on right: 3 12 13 14 60 65 66 67
    number (71)
        on left: 69
        on right: 9 10 20 56 57


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . function

    $end      shift, and go to state 2
    FUNCTION  shift, and go to state 3

    function  go to state 4


State 2

    0 $accept: program $end .

    $default  accept


State 3

    3 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    ident  go to state 6


State 4

    2 program: program function .

    $default  reduce using rule 2 (program)


State 5

   68 ident: IDENT .

    $default  reduce using rule 68 (ident)


State 6

    3 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 7


State 7

    3 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 8


State 8

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    error  shift, and go to state 9
    IDENT  shift, and go to state 5

    END_PARAMS  reduce using rule 4 (declarations)

    declarations  go to state 10
    declaration   go to state 11
    identifiers   go to state 12
    ident         go to state 13


State 9

   11 declaration: error .

    $default  reduce using rule 11 (declaration)


State 10

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 14


State 11

    5 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 15


State 12

    8 declaration: identifiers . COLON INTEGER
    9            | identifiers . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   10            | identifiers . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   13 identifiers: identifiers . COMMA ident
   14            | identifiers . error ident

    error  shift, and go to state 16
    COLON  shift, and go to state 17
    COMMA  shift, and go to state 18


State 13

   12 identifiers: ident .

    $default  reduce using rule 12 (identifiers)


State 14

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 15

    5 declarations: declaration SEMICOLON . declarations

    error  shift, and go to state 9
    IDENT  shift, and go to state 5

    END_PARAMS  reduce using rule 4 (declarations)
    END_LOCALS  reduce using rule 4 (declarations)

    declarations  go to state 20
    declaration   go to state 11
    identifiers   go to state 12
    ident         go to state 13


State 16

   14 identifiers: identifiers error . ident

    IDENT  shift, and go to state 5

    ident  go to state 21


State 17

    8 declaration: identifiers COLON . INTEGER
    9            | identifiers COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   10            | identifiers COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 22
    ARRAY    shift, and go to state 23


State 18

   13 identifiers: identifiers COMMA . ident

    IDENT  shift, and go to state 5

    ident  go to state 24


State 19

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    error  shift, and go to state 9
    IDENT  shift, and go to state 5

    END_LOCALS  reduce using rule 4 (declarations)

    declarations  go to state 25
    declaration   go to state 11
    identifiers   go to state 12
    ident         go to state 13


State 20

    5 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 5 (declarations)


State 21

   14 identifiers: identifiers error ident .

    $default  reduce using rule 14 (identifiers)


State 22

    8 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 8 (declaration)


State 23

    9 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   10            | identifiers COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


State 24

   13 identifiers: identifiers COMMA ident .

    $default  reduce using rule 13 (identifiers)


State 25

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 27


State 26

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER
   10            | identifiers COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 28

    number  go to state 29


State 27

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 30


State 28

   69 number: NUMBER .

    $default  reduce using rule 69 (number)


State 29

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER
   10            | identifiers COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 31


State 30

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOR       shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 6 (statements)

    statements  go to state 40
    statement   go to state 41
    var         go to state 42
    ident       go to state 43


State 31

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER
   10            | identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    OF                shift, and go to state 44
    L_SQUARE_BRACKET  shift, and go to state 45


State 32

   16 statement: IF . bool_exp THEN statements ENDIF
   17          | IF . bool_exp THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50

    bool_exp             go to state 51
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    expression           go to state 54
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57
    ident                go to state 58
    number               go to state 59


State 33

   18 statement: WHILE . bool_exp BEGIN_LOOP statements END_LOOP

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50

    bool_exp             go to state 60
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    expression           go to state 54
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57
    ident                go to state 58
    number               go to state 59


State 34

   19 statement: DO . BEGIN_LOOP statements END_LOOP WHILE bool_exp

    BEGIN_LOOP  shift, and go to state 61


State 35

   20 statement: FOR . var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGIN_LOOP statements END_LOOP

    IDENT  shift, and go to state 5

    var    go to state 62
    ident  go to state 43


State 36

   23 statement: CONTINUE .

    $default  reduce using rule 23 (statement)


State 37

   21 statement: READ . vars

    IDENT  shift, and go to state 5

    vars   go to state 63
    var    go to state 64
    ident  go to state 43


State 38

   22 statement: WRITE . vars

    IDENT  shift, and go to state 5

    vars   go to state 65
    var    go to state 64
    ident  go to state 43


State 39

   24 statement: RETURN . expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66

    expression           go to state 67
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57
    ident                go to state 58
    number               go to state 59


State 40

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 68


State 41

    7 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 69


State 42

   15 statement: var . ASSIGN expression
   25          | var . error expression

    error   shift, and go to state 70
    ASSIGN  shift, and go to state 71


State 43

   65 var: ident .
   66    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   67    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 72

    $default  reduce using rule 65 (var)


State 44

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 73


State 45

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 28

    number  go to state 74


State 46

   34 relation_expr: NOT . expression comp expression
   36              | NOT . TRUE
   38              | NOT . FALSE
   40              | NOT . L_PAREN bool_exp R_PAREN

    TRUE     shift, and go to state 75
    FALSE    shift, and go to state 76
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 77

    expression           go to state 78
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57
    ident                go to state 58
    number               go to state 59


State 47

   35 relation_expr: TRUE .

    $default  reduce using rule 35 (relation_expr)


State 48

   37 relation_expr: FALSE .

    $default  reduce using rule 37 (relation_expr)


State 49

   55 term: SUB . var
   57     | SUB . number
   59     | SUB . L_PAREN expression R_PAREN

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    L_PAREN  shift, and go to state 79

    var     go to state 80
    ident   go to state 43
    number  go to state 81


State 50

   39 relation_expr: L_PAREN . bool_exp R_PAREN
   58 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50

    bool_exp             go to state 82
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    expression           go to state 83
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57
    ident                go to state 58
    number               go to state 59


State 51

   16 statement: IF bool_exp . THEN statements ENDIF
   17          | IF bool_exp . THEN statements ELSE statements ENDIF
   30 bool_exp: bool_exp . OR relation_and_expr

    THEN  shift, and go to state 84
    OR    shift, and go to state 85


State 52

   29 bool_exp: relation_and_expr .
   32 relation_and_expr: relation_and_expr . AND relation_expr

    AND  shift, and go to state 86

    $default  reduce using rule 29 (bool_exp)


State 53

   31 relation_and_expr: relation_expr .

    $default  reduce using rule 31 (relation_and_expr)


State 54

   33 relation_expr: expression . comp expression
   48 expression: expression . ADD multiplicative_expr
   49           | expression . SUB multiplicative_expr

    LT   shift, and go to state 87
    LTE  shift, and go to state 88
    GT   shift, and go to state 89
    GTE  shift, and go to state 90
    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    ADD  shift, and go to state 93
    SUB  shift, and go to state 94

    comp  go to state 95


State 55

   47 expression: multiplicative_expr .
   51 multiplicative_expr: multiplicative_expr . MULT term
   52                    | multiplicative_expr . DIV term
   53                    | multiplicative_expr . MOD term

    MULT  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 98

    $default  reduce using rule 47 (expression)


State 56

   50 multiplicative_expr: term .

    $default  reduce using rule 50 (multiplicative_expr)


State 57

   54 term: var .

    $default  reduce using rule 54 (term)


State 58

   60 term: ident . L_PAREN expressions R_PAREN
   65 var: ident .
   66    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   67    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 72
    L_PAREN           shift, and go to state 99

    $default  reduce using rule 65 (var)


State 59

   56 term: number .

    $default  reduce using rule 56 (term)


State 60

   18 statement: WHILE bool_exp . BEGIN_LOOP statements END_LOOP
   30 bool_exp: bool_exp . OR relation_and_expr

    BEGIN_LOOP  shift, and go to state 100
    OR          shift, and go to state 85


State 61

   19 statement: DO BEGIN_LOOP . statements END_LOOP WHILE bool_exp

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOR       shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 6 (statements)

    statements  go to state 101
    statement   go to state 41
    var         go to state 42
    ident       go to state 43


State 62

   20 statement: FOR var . ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGIN_LOOP statements END_LOOP

    ASSIGN  shift, and go to state 102


State 63

   21 statement: READ vars .
   27 vars: vars . COMMA var
   28     | vars . error var

    error  shift, and go to state 103
    COMMA  shift, and go to state 104

    SEMICOLON  reduce using rule 21 (statement)


State 64

   26 vars: var .

    $default  reduce using rule 26 (vars)


State 65

   22 statement: WRITE vars .
   27 vars: vars . COMMA var
   28     | vars . error var

    error  shift, and go to state 103
    COMMA  shift, and go to state 104

    SEMICOLON  reduce using rule 22 (statement)


State 66

   58 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66

    expression           go to state 105
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57
    ident                go to state 58
    number               go to state 59


State 67

   24 statement: RETURN expression .
   48 expression: expression . ADD multiplicative_expr
   49           | expression . SUB multiplicative_expr

    ADD  shift, and go to state 93
    SUB  shift, and go to state 94

    $default  reduce using rule 24 (statement)


State 68

    3 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 3 (function)


State 69

    7 statements: statement SEMICOLON . statements

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOR       shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 6 (statements)

    statements  go to state 106
    statement   go to state 41
    var         go to state 42
    ident       go to state 43


State 70

   25 statement: var error . expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66

    expression           go to state 107
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57
    ident                go to state 58
    number               go to state 59


State 71

   15 statement: var ASSIGN . expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66

    expression           go to state 108
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57
    ident                go to state 58
    number               go to state 59


State 72

   66 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET
   67    | ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66

    expression           go to state 109
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57
    ident                go to state 58
    number               go to state 59


State 73

    9 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 9 (declaration)


State 74

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 110


State 75

   36 relation_expr: NOT TRUE .

    $default  reduce using rule 36 (relation_expr)


State 76

   38 relation_expr: NOT FALSE .

    $default  reduce using rule 38 (relation_expr)


State 77

   40 relation_expr: NOT L_PAREN . bool_exp R_PAREN
   58 term: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50

    bool_exp             go to state 111
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    expression           go to state 83
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57
    ident                go to state 58
    number               go to state 59


State 78

   34 relation_expr: NOT expression . comp expression
   48 expression: expression . ADD multiplicative_expr
   49           | expression . SUB multiplicative_expr

    LT   shift, and go to state 87
    LTE  shift, and go to state 88
    GT   shift, and go to state 89
    GTE  shift, and go to state 90
    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    ADD  shift, and go to state 93
    SUB  shift, and go to state 94

    comp  go to state 112


State 79

   59 term: SUB L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66

    expression           go to state 113
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57
    ident                go to state 58
    number               go to state 59


State 80

   55 term: SUB var .

    $default  reduce using rule 55 (term)


State 81

   57 term: SUB number .

    $default  reduce using rule 57 (term)


State 82

   30 bool_exp: bool_exp . OR relation_and_expr
   39 relation_expr: L_PAREN bool_exp . R_PAREN

    OR       shift, and go to state 85
    R_PAREN  shift, and go to state 114


State 83

   33 relation_expr: expression . comp expression
   48 expression: expression . ADD multiplicative_expr
   49           | expression . SUB multiplicative_expr
   58 term: L_PAREN expression . R_PAREN

    LT       shift, and go to state 87
    LTE      shift, and go to state 88
    GT       shift, and go to state 89
    GTE      shift, and go to state 90
    EQ       shift, and go to state 91
    NEQ      shift, and go to state 92
    ADD      shift, and go to state 93
    SUB      shift, and go to state 94
    R_PAREN  shift, and go to state 115

    comp  go to state 95


State 84

   16 statement: IF bool_exp THEN . statements ENDIF
   17          | IF bool_exp THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOR       shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 6 (statements)

    statements  go to state 116
    statement   go to state 41
    var         go to state 42
    ident       go to state 43


State 85

   30 bool_exp: bool_exp OR . relation_and_expr

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50

    relation_and_expr    go to state 117
    relation_expr        go to state 53
    expression           go to state 54
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57
    ident                go to state 58
    number               go to state 59


State 86

   32 relation_and_expr: relation_and_expr AND . relation_expr

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50

    relation_expr        go to state 118
    expression           go to state 54
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57
    ident                go to state 58
    number               go to state 59


State 87

   43 comp: LT .

    $default  reduce using rule 43 (comp)


State 88

   45 comp: LTE .

    $default  reduce using rule 45 (comp)


State 89

   44 comp: GT .

    $default  reduce using rule 44 (comp)


State 90

   46 comp: GTE .

    $default  reduce using rule 46 (comp)


State 91

   41 comp: EQ .

    $default  reduce using rule 41 (comp)


State 92

   42 comp: NEQ .

    $default  reduce using rule 42 (comp)


State 93

   48 expression: expression ADD . multiplicative_expr

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66

    multiplicative_expr  go to state 119
    term                 go to state 56
    var                  go to state 57
    ident                go to state 58
    number               go to state 59


State 94

   49 expression: expression SUB . multiplicative_expr

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66

    multiplicative_expr  go to state 120
    term                 go to state 56
    var                  go to state 57
    ident                go to state 58
    number               go to state 59


State 95

   33 relation_expr: expression comp . expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66

    expression           go to state 121
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57
    ident                go to state 58
    number               go to state 59


State 96

   51 multiplicative_expr: multiplicative_expr MULT . term

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66

    term    go to state 122
    var     go to state 57
    ident   go to state 58
    number  go to state 59


State 97

   52 multiplicative_expr: multiplicative_expr DIV . term

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66

    term    go to state 123
    var     go to state 57
    ident   go to state 58
    number  go to state 59


State 98

   53 multiplicative_expr: multiplicative_expr MOD . term

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66

    term    go to state 124
    var     go to state 57
    ident   go to state 58
    number  go to state 59


State 99

   60 term: ident L_PAREN . expressions R_PAREN

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66

    $default  reduce using rule 61 (expressions)

    expression           go to state 125
    multiplicative_expr  go to state 55
    term                 go to state 56
    expressions          go to state 126
    var                  go to state 57
    ident                go to state 58
    number               go to state 59


State 100

   18 statement: WHILE bool_exp BEGIN_LOOP . statements END_LOOP

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOR       shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 6 (statements)

    statements  go to state 127
    statement   go to state 41
    var         go to state 42
    ident       go to state 43


State 101

   19 statement: DO BEGIN_LOOP statements . END_LOOP WHILE bool_exp

    END_LOOP  shift, and go to state 128


State 102

   20 statement: FOR var ASSIGN . number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGIN_LOOP statements END_LOOP

    NUMBER  shift, and go to state 28

    number  go to state 129


State 103

   28 vars: vars error . var

    IDENT  shift, and go to state 5

    var    go to state 130
    ident  go to state 43


State 104

   27 vars: vars COMMA . var

    IDENT  shift, and go to state 5

    var    go to state 131
    ident  go to state 43


State 105

   48 expression: expression . ADD multiplicative_expr
   49           | expression . SUB multiplicative_expr
   58 term: L_PAREN expression . R_PAREN

    ADD      shift, and go to state 93
    SUB      shift, and go to state 94
    R_PAREN  shift, and go to state 115


State 106

    7 statements: statement SEMICOLON statements .

    $default  reduce using rule 7 (statements)


State 107

   25 statement: var error expression .
   48 expression: expression . ADD multiplicative_expr
   49           | expression . SUB multiplicative_expr

    ADD  shift, and go to state 93
    SUB  shift, and go to state 94

    $default  reduce using rule 25 (statement)


State 108

   15 statement: var ASSIGN expression .
   48 expression: expression . ADD multiplicative_expr
   49           | expression . SUB multiplicative_expr

    ADD  shift, and go to state 93
    SUB  shift, and go to state 94

    $default  reduce using rule 15 (statement)


State 109

   48 expression: expression . ADD multiplicative_expr
   49           | expression . SUB multiplicative_expr
   66 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET
   67    | ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    ADD               shift, and go to state 93
    SUB               shift, and go to state 94
    R_SQUARE_BRACKET  shift, and go to state 132


State 110

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 133


State 111

   30 bool_exp: bool_exp . OR relation_and_expr
   40 relation_expr: NOT L_PAREN bool_exp . R_PAREN

    OR       shift, and go to state 85
    R_PAREN  shift, and go to state 134


State 112

   34 relation_expr: NOT expression comp . expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66

    expression           go to state 135
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57
    ident                go to state 58
    number               go to state 59


State 113

   48 expression: expression . ADD multiplicative_expr
   49           | expression . SUB multiplicative_expr
   59 term: SUB L_PAREN expression . R_PAREN

    ADD      shift, and go to state 93
    SUB      shift, and go to state 94
    R_PAREN  shift, and go to state 136


State 114

   39 relation_expr: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 39 (relation_expr)


State 115

   58 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 58 (term)


State 116

   16 statement: IF bool_exp THEN statements . ENDIF
   17          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 137
    ELSE   shift, and go to state 138


State 117

   30 bool_exp: bool_exp OR relation_and_expr .
   32 relation_and_expr: relation_and_expr . AND relation_expr

    AND  shift, and go to state 86

    $default  reduce using rule 30 (bool_exp)


State 118

   32 relation_and_expr: relation_and_expr AND relation_expr .

    $default  reduce using rule 32 (relation_and_expr)


State 119

   48 expression: expression ADD multiplicative_expr .
   51 multiplicative_expr: multiplicative_expr . MULT term
   52                    | multiplicative_expr . DIV term
   53                    | multiplicative_expr . MOD term

    MULT  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 98

    $default  reduce using rule 48 (expression)


State 120

   49 expression: expression SUB multiplicative_expr .
   51 multiplicative_expr: multiplicative_expr . MULT term
   52                    | multiplicative_expr . DIV term
   53                    | multiplicative_expr . MOD term

    MULT  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 98

    $default  reduce using rule 49 (expression)


State 121

   33 relation_expr: expression comp expression .
   48 expression: expression . ADD multiplicative_expr
   49           | expression . SUB multiplicative_expr

    ADD  shift, and go to state 93
    SUB  shift, and go to state 94

    $default  reduce using rule 33 (relation_expr)


State 122

   51 multiplicative_expr: multiplicative_expr MULT term .

    $default  reduce using rule 51 (multiplicative_expr)


State 123

   52 multiplicative_expr: multiplicative_expr DIV term .

    $default  reduce using rule 52 (multiplicative_expr)


State 124

   53 multiplicative_expr: multiplicative_expr MOD term .

    $default  reduce using rule 53 (multiplicative_expr)


State 125

   48 expression: expression . ADD multiplicative_expr
   49           | expression . SUB multiplicative_expr
   62 expressions: expression .

    ADD  shift, and go to state 93
    SUB  shift, and go to state 94

    $default  reduce using rule 62 (expressions)


State 126

   60 term: ident L_PAREN expressions . R_PAREN
   63 expressions: expressions . COMMA expression
   64            | expressions . error expression

    error    shift, and go to state 139
    COMMA    shift, and go to state 140
    R_PAREN  shift, and go to state 141


State 127

   18 statement: WHILE bool_exp BEGIN_LOOP statements . END_LOOP

    END_LOOP  shift, and go to state 142


State 128

   19 statement: DO BEGIN_LOOP statements END_LOOP . WHILE bool_exp

    WHILE  shift, and go to state 143


State 129

   20 statement: FOR var ASSIGN number . SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGIN_LOOP statements END_LOOP

    SEMICOLON  shift, and go to state 144


State 130

   28 vars: vars error var .

    $default  reduce using rule 28 (vars)


State 131

   27 vars: vars COMMA var .

    $default  reduce using rule 27 (vars)


State 132

   66 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .
   67    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 145

    $default  reduce using rule 66 (var)


State 133

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 146


State 134

   40 relation_expr: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 40 (relation_expr)


State 135

   34 relation_expr: NOT expression comp expression .
   48 expression: expression . ADD multiplicative_expr
   49           | expression . SUB multiplicative_expr

    ADD  shift, and go to state 93
    SUB  shift, and go to state 94

    $default  reduce using rule 34 (relation_expr)


State 136

   59 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 59 (term)


State 137

   16 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 16 (statement)


State 138

   17 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOR       shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 6 (statements)

    statements  go to state 147
    statement   go to state 41
    var         go to state 42
    ident       go to state 43


State 139

   64 expressions: expressions error . expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66

    expression           go to state 148
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57
    ident                go to state 58
    number               go to state 59


State 140

   63 expressions: expressions COMMA . expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66

    expression           go to state 149
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57
    ident                go to state 58
    number               go to state 59


State 141

   60 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 60 (term)


State 142

   18 statement: WHILE bool_exp BEGIN_LOOP statements END_LOOP .

    $default  reduce using rule 18 (statement)


State 143

   19 statement: DO BEGIN_LOOP statements END_LOOP WHILE . bool_exp

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50

    bool_exp             go to state 150
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    expression           go to state 54
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57
    ident                go to state 58
    number               go to state 59


State 144

   20 statement: FOR var ASSIGN number SEMICOLON . bool_exp SEMICOLON var ASSIGN expression BEGIN_LOOP statements END_LOOP

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50

    bool_exp             go to state 151
    relation_and_expr    go to state 52
    relation_expr        go to state 53
    expression           go to state 54
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57
    ident                go to state 58
    number               go to state 59


State 145

   67 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66

    expression           go to state 152
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57
    ident                go to state 58
    number               go to state 59


State 146

   10 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 10 (declaration)


State 147

   17 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 153


State 148

   48 expression: expression . ADD multiplicative_expr
   49           | expression . SUB multiplicative_expr
   64 expressions: expressions error expression .

    ADD  shift, and go to state 93
    SUB  shift, and go to state 94

    $default  reduce using rule 64 (expressions)


State 149

   48 expression: expression . ADD multiplicative_expr
   49           | expression . SUB multiplicative_expr
   63 expressions: expressions COMMA expression .

    ADD  shift, and go to state 93
    SUB  shift, and go to state 94

    $default  reduce using rule 63 (expressions)


State 150

   19 statement: DO BEGIN_LOOP statements END_LOOP WHILE bool_exp .
   30 bool_exp: bool_exp . OR relation_and_expr

    OR  shift, and go to state 85

    $default  reduce using rule 19 (statement)


State 151

   20 statement: FOR var ASSIGN number SEMICOLON bool_exp . SEMICOLON var ASSIGN expression BEGIN_LOOP statements END_LOOP
   30 bool_exp: bool_exp . OR relation_and_expr

    OR         shift, and go to state 85
    SEMICOLON  shift, and go to state 154


State 152

   48 expression: expression . ADD multiplicative_expr
   49           | expression . SUB multiplicative_expr
   67 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    ADD               shift, and go to state 93
    SUB               shift, and go to state 94
    R_SQUARE_BRACKET  shift, and go to state 155


State 153

   17 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 17 (statement)


State 154

   20 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON . var ASSIGN expression BEGIN_LOOP statements END_LOOP

    IDENT  shift, and go to state 5

    var    go to state 156
    ident  go to state 43


State 155

   67 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 67 (var)


State 156

   20 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var . ASSIGN expression BEGIN_LOOP statements END_LOOP

    ASSIGN  shift, and go to state 157


State 157

   20 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN . expression BEGIN_LOOP statements END_LOOP

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 28
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 66

    expression           go to state 158
    multiplicative_expr  go to state 55
    term                 go to state 56
    var                  go to state 57
    ident                go to state 58
    number               go to state 59


State 158

   20 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression . BEGIN_LOOP statements END_LOOP
   48 expression: expression . ADD multiplicative_expr
   49           | expression . SUB multiplicative_expr

    BEGIN_LOOP  shift, and go to state 159
    ADD         shift, and go to state 93
    SUB         shift, and go to state 94


State 159

   20 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGIN_LOOP . statements END_LOOP

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOR       shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 6 (statements)

    statements  go to state 160
    statement   go to state 41
    var         go to state 42
    ident       go to state 43


State 160

   20 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGIN_LOOP statements . END_LOOP

    END_LOOP  shift, and go to state 161


State 161

   20 statement: FOR var ASSIGN number SEMICOLON bool_exp SEMICOLON var ASSIGN expression BEGIN_LOOP statements END_LOOP .

    $default  reduce using rule 20 (statement)
